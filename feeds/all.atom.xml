<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>YeYanbo</title><link href="http://blog.yeyanbo.com/" rel="alternate"></link><link href="http://blog.yeyanbo.com/feeds/all.atom.xml" rel="self"></link><id>http://blog.yeyanbo.com/</id><updated>2013-06-04T21:13:00+08:00</updated><entry><title>Google Summer of Code 1</title><link href="http://blog.yeyanbo.com/posts/google-summer-of-code-1.html" rel="alternate"></link><updated>2013-06-04T21:13:00+08:00</updated><author><name>Yanbo Ye</name></author><id>tag:blog.yeyanbo.com,2013-06-04:posts/google-summer-of-code-1.html</id><summary type="html">&lt;p&gt;I'm very excited that I'm accepted for this year's &lt;a href="http://www.google-melange.com/gsoc/homepage/google/gsoc2013"&gt;Google Summer of Code(GSOC)&lt;/a&gt;. In recent days, I have been busy preparing my master's thesis and defense. This news is like good stress reliever for me. The project I'm going to work on is "&lt;a href="http://informatics.nescent.org/wiki/Phyloinformatics_Summer_of_Code_2013#Phylogenetics_in_Biopython:_Filling_in_the_gaps"&gt;Phylogenetics in Biopython: Filling in the gaps&lt;/a&gt;", which is to implement some phylogenetics algorithms for &lt;a href="http://biopython.org/wiki/Main_Page"&gt;Biopython&lt;/a&gt;. I believe it will be an exciting coding experience.&lt;/p&gt;
&lt;h2&gt;Get to Know GSOC&lt;/h2&gt;
&lt;p&gt;The first time I got to know the GSOC was from &lt;a href="http://www.biojava.org"&gt;Biojava&lt;/a&gt; homepage when I was trying to use Biojava for my own bioinformatics work. As I thought most of the applicants and biojava contributors might be from the computer background, I never had the courage to apply this. Last September, I got the chance to know Professor Allen and Karen when they were visiting our lab. And Karen told us more details about the GSOC and also the &lt;a href="http://www.nescent.org/"&gt;NESCent&lt;/a&gt;, and that they had been the mentoring organization for several years. I must say this finally inspired me to apply the GSOC this year.&lt;/p&gt;
&lt;h2&gt;Application&lt;/h2&gt;
&lt;p&gt;The application is certainly through the &lt;a href="http://informatics.nescent.org/wiki/Phyloinformatics_Summer_of_Code_2013"&gt;Phyloinformatics Summer of Code&lt;/a&gt; from NESCent. I originally wanted to apply the project of "Discovering links to ToLWeb content from a tree in the Open Tree of Life's software system". This project is based on several existing Java projects and also need some knowledge of HTML, XML, Javascript and Python. As my first programming language is Java and I know other related languages and techniques, this project is good for me. After the Biopython projects being added in, I found the current project was more suitable for me. Because most of the algorithms in this project are implemented in &lt;a href="https://github.com/bigwiv/BlastGraph"&gt;BlastGraph&lt;/a&gt;, a software I wrote in Java. I'm very familiar with those algorithms. Also, the former project has another applicant, while this one did not have any. As the project can only have one student and every student can only work on one project, maybe it's better to avoid the competition so that everyone can have a higher chance to be selected. Another major reason to choose this project is that I want to improve my python programming skill, which I use far less than Java before.&lt;/p&gt;
&lt;h2&gt;Project Description&lt;/h2&gt;
&lt;p&gt;As the name implies, this project is to implement some phylogenetic algorithms that are currently absent in the Biopython.Phylo package. In this package, some basic phylogenetics functions, such as tree operations, parsers for Newick, Nexus and PhyloXML, and wrappers for Phyml, Raxml and PAML, are already implemented. While there are some important components that remain to be filled in to better support phylogenetic workflows. These include simple tree construction algorithms, consensus tree searching, tree comparison and visualization. In this project, I will focus on the first two functions: tree construction and consensus tree searching. The tree construction part includes three algorithms: &lt;a href="http://en.wikipedia.org/wiki/UPGMA"&gt;UPGMA&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/Neighbor-joining"&gt;Neighbor Joining&lt;/a&gt;, and &lt;a href="http://en.wikipedia.org/wiki/Maximum_parsimony_(phylogenetics)"&gt;Maximum Parsimony&lt;/a&gt;. And the consensus tree part includes another three: Strict, Majority-rule and Adams Consensus. So after this project, there will be two separate modules providing those algorithms in Biopython.Phylo package.&lt;/p&gt;
&lt;h2&gt;Works for the Next Two Weeks&lt;/h2&gt;
&lt;p&gt;The coding time will start on June 17. So during the next two weeks, I will read related source code in Biopython and trying to design two draft modules for both two parts.&lt;/p&gt;</summary><category term="necent"></category><category term="GSOC"></category></entry><entry><title>Switch to Pelican</title><link href="http://blog.yeyanbo.com/posts/switch-to-pelican.html" rel="alternate"></link><updated>2013-06-01T21:00:00+08:00</updated><author><name>Yanbo Ye</name></author><id>tag:blog.yeyanbo.com,2013-06-01:posts/switch-to-pelican.html</id><summary type="html">&lt;p&gt;As I need to post my working progress for the Google Summer of Code project, this github blog is a good place to share this information. My project is a Biopython project. Before start the real coding, it's better to play with some existing python code. So yesterday, I changed the blog generating system from &lt;a href="http://octopress.org/"&gt;Octopress&lt;/a&gt; to &lt;a href="http://getpelican.com/"&gt;Pelican&lt;/a&gt;. Octopress is based on Ruby and is widely used by github bloggers. But, as I know little about Ruby, it is complicated and hard to use for me. Pelican is pure Python. It really get much more easier. Actually I think Pelican is more easy to install and use than Octopress even for those who know little about both languages. The comment system--DISQUS has not been setup yet, as I forget my DISQUS account. Will fix it later.&lt;/p&gt;</summary><category term="python"></category><category term="pelican"></category></entry><entry><title>Tools I used for markdown writing</title><link href="http://blog.yeyanbo.com/posts/tools-i-used-for-markdown-writing.html" rel="alternate"></link><updated>2013-03-03T21:13:00+08:00</updated><author><name>Yanbo Ye</name></author><id>tag:blog.yeyanbo.com,2013-03-03:posts/tools-i-used-for-markdown-writing.html</id><summary type="html">&lt;h2&gt;Editors&lt;/h2&gt;
&lt;h3&gt;Sublime Text and plugins on Linux&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.sublimetext.com/" title="Sublime Text"&gt;Sublime Text&lt;/a&gt; is an awesome text editor supporting almost all programming languages. It also support Windows and Mac including Linux. Some useful functions users love are &lt;em&gt;Goto Anything&lt;/em&gt;, &lt;em&gt;Multiple Selections&lt;/em&gt;, &lt;em&gt;Command Palette&lt;/em&gt; and &lt;em&gt;Split Editing&lt;/em&gt;, etc. While the most fantastic feature is its easy and elegant &lt;a href="http://www.sublimetext.com/docs/2/api_reference.html" title="plugin API"&gt;plugin system&lt;/a&gt; using JSON and python language and its open source &lt;a href="http://wbond.net/sublime_packages/community" title="Sublime Text Plugin Community"&gt;plugin community&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So it can support markdown with highlight and there are some plugins make markdown writing much easier.&lt;/p&gt;
&lt;p&gt;List of markdown plugins:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/revolunet/sublimetext-markdown-preview" title="Markdown Preview"&gt;Markdown Preview&lt;/a&gt;: preview in browser.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ogom.github.com/sublimetext-markdown-slideshow" title="Markdown Slideshow"&gt;Markdown Slideshow&lt;/a&gt;: markdown slideshow to Html5 slideshow.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://johnmacfarlane.net/pandoc/" title="Pandoc"&gt;Pandoc&lt;/a&gt;: Pandoc integration in Sublime.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phyllisstein/Pandown" title="Pandown"&gt;Pandown&lt;/a&gt;: Another Pandoc integration with more output support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/larlequin/PandocAcademic" title="Pandoc Academic"&gt;Pandoc Academic&lt;/a&gt;: Another Pandoc integration with bibliography support.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Editors on other platforms&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Windows: &lt;a href="http://markdownpad.com/" title="MarkdownPad"&gt;MarkdownPad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chrome: &lt;a href="https://chrome.google.com/webstore/detail/made/oknndfeeopgpibecfjljjfanledpbkog" title="MaDe Editor for markdown"&gt;MaDe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Android: &lt;a href="https://play.google.com/store/apps/details?id=com.jamesmc.writer" title="Writer"&gt;Writer&lt;/a&gt; with Dropbox syncing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Pandoc&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://johnmacfarlane.net/pandoc/" title="Pandoc"&gt;Pandoc&lt;/a&gt; is a general markup converter. It can convert from one markup format to another and to DOCX, PDF, EPUB document. The blow network shows the supported markup formats and conversions. Pandoc allow you to write document in markdown and release it to any other format.&lt;/p&gt;
&lt;p&gt;&lt;img alt="PandocFormat" src="http://johnmacfarlane.net/pandoc/diagram.png" title="Pandoc Format" /&gt;&lt;/p&gt;
&lt;!-- links --&gt;

&lt;!-- images --&gt;</summary><category term="programing"></category><category term="markdown"></category><category term="Pandoc"></category><category term="Sublime Text"></category></entry><entry><title>First Blog</title><link href="http://blog.yeyanbo.com/posts/first-blog.html" rel="alternate"></link><updated>2013-03-02T17:30:00+08:00</updated><author><name>Yanbo Ye</name></author><id>tag:blog.yeyanbo.com,2013-03-02:posts/first-blog.html</id><summary type="html">&lt;h2&gt;Start&lt;/h2&gt;
&lt;p&gt;The first github blog post. Just a simple test.&lt;/p&gt;
&lt;h2&gt;Installed octopress&lt;/h2&gt;
&lt;p&gt;Installed octopress this afternoon. I thought it was a real dynamic blogging or CMS system just like wordpress. While I was wrong. But I must admit it's the perfect blogging system for programmers on github.&lt;/p&gt;
&lt;!-- more --&gt;

&lt;p&gt;I'm not a ruby coder and I don't care about how it works. Just want use it to help me get familiar with github and markdown. &lt;/p&gt;
&lt;p&gt;So let's start blogging on github with markdown. &lt;/p&gt;
&lt;h2&gt;Test&lt;/h2&gt;
&lt;h3&gt;Emphasize&lt;/h3&gt;
&lt;p&gt;This is a &lt;em&gt;emphasize&lt;/em&gt; &lt;strong&gt;test&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;List&lt;/h3&gt;
&lt;p&gt;This is a list test.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;list1&lt;/li&gt;
&lt;li&gt;list2&lt;/li&gt;
&lt;li&gt;list3&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Code block test&lt;/h3&gt;
&lt;p&gt;{% include_code sample.py sample.py %}&lt;/p&gt;
&lt;h2&gt;Works?&lt;/h2&gt;
&lt;p&gt;Enough. It works?&lt;/p&gt;</summary><category term="octopress"></category></entry></feed>