<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Lijax on Github]]></title>
  <link href="http://lijax.github.com/atom.xml" rel="self"/>
  <link href="http://lijax.github.com/"/>
  <updated>2013-03-02T21:37:39+08:00</updated>
  <id>http://lijax.github.com/</id>
  <author>
    <name><![CDATA[Lijax]]></name>
    <email><![CDATA[yeyanbo289@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[First Blog]]></title>
    <link href="http://lijax.github.com/blog/2013/03/02/first-blog/"/>
    <updated>2013-03-02T17:30:00+08:00</updated>
    <id>http://lijax.github.com/blog/2013/03/02/first-blog</id>
    <content type="html"><![CDATA[<h2>Start</h2>

<p>The first github blog post. Just a simple test.</p>

<!-- more -->


<h2>Installed octopress</h2>

<p>Installed octopress this afternoon. I thought it was a real dynamic blogging or CMS system just like wordpress. While I&#8217;m wrong. But I must admit it&#8217;s the perfect blogging system for programmer on github.</p>

<p>I&#8217;m not a ruby coder and I don&#8217;t care about how it works. Just want use it to help me get familiar with github and markdown.</p>

<p>So let&#8217;s start blogging on github with markdown.</p>

<h2>Test</h2>

<h3>Emphasize</h3>

<p>This is a <em>emphasize</em> <strong>test</strong>.</p>

<h3>List</h3>

<p>This is a list test.</p>

<ul>
<li>list1</li>
<li>list2</li>
<li>list3</li>
</ul>


<h3>Code block test</h3>

<figure class='code'><figcaption><span>sample.py (sample.py)</span> <a href='http://lijax.github.com/downloads/code/sample.py'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#! /usr/bin/env python</span>
</span><span class='line'><span class="c">#   </span>
</span><span class='line'><span class="c"># python script template file</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># @data: 2013-2-2</span>
</span><span class='line'><span class="c"># @author: yeyanbo</span>
</span><span class='line'>
</span><span class='line'><span class="c">##import other module</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">getopt</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">usage</span><span class="p">():</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot; modify this for usage information&quot;&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">usage</span> <span class="o">=</span> <span class="s">&quot;&quot;&quot;Usage: python script.py -i [input file] -o [output file]</span>
</span><span class='line'><span class="s">    </span>
</span><span class='line'><span class="s">Option:</span>
</span><span class='line'><span class="s">  -h,--help      Print this usage</span>
</span><span class='line'><span class="s">  -i,--input     input file</span>
</span><span class='line'><span class="s">  -o,--output    output file</span>
</span><span class='line'><span class="s">&quot;&quot;&quot;</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">usage</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot; main work flow should be in the main function&quot;&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#get options and arguments</span>
</span><span class='line'>    <span class="c">#modify options to your version as described in the usage() function</span>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="n">opts</span><span class="p">,</span> <span class="n">args</span> <span class="o">=</span> <span class="n">getopt</span><span class="o">.</span><span class="n">getopt</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="s">&quot;i:o:h&quot;</span><span class="p">,</span> <span class="p">[</span><span class="s">&quot;input=&quot;</span><span class="p">,</span> <span class="s">&quot;output=&quot;</span><span class="p">,</span> <span class="s">&quot;help&quot;</span><span class="p">])</span>
</span><span class='line'>    <span class="k">except</span> <span class="n">getopt</span><span class="o">.</span><span class="n">GetoptError</span><span class="p">,</span> <span class="n">err</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span> <span class="nb">str</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
</span><span class='line'>        <span class="n">usage</span><span class="p">()</span>
</span><span class='line'>        <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#default value of options and arguments</span>
</span><span class='line'>    <span class="c">#modify default value to your version</span>
</span><span class='line'>    <span class="n">infile</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="n">outfile</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#parse options</span>
</span><span class='line'>    <span class="c">#modify this accordingly</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">o</span><span class="p">,</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">opts</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">o</span> <span class="ow">in</span> <span class="p">(</span><span class="s">&quot;-h&quot;</span><span class="p">,</span> <span class="s">&quot;--help&quot;</span><span class="p">):</span>
</span><span class='line'>            <span class="n">usage</span><span class="p">()</span>
</span><span class='line'>            <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">()</span>
</span><span class='line'>        <span class="k">elif</span> <span class="n">o</span> <span class="ow">in</span> <span class="p">(</span><span class="s">&quot;-i&quot;</span><span class="p">,</span> <span class="s">&quot;--input&quot;</span><span class="p">):</span>
</span><span class='line'>            <span class="n">infile</span> <span class="o">=</span> <span class="n">a</span>
</span><span class='line'>        <span class="k">elif</span> <span class="n">o</span> <span class="ow">in</span> <span class="p">(</span><span class="s">&quot;-o&quot;</span><span class="p">,</span> <span class="s">&quot;--output&quot;</span><span class="p">):</span>
</span><span class='line'>            <span class="n">outfile</span> <span class="o">=</span> <span class="n">a</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="k">assert</span> <span class="bp">False</span><span class="p">,</span> <span class="s">&quot;unhandled option&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#check options and print usage if unexpected </span>
</span><span class='line'>    <span class="c">#modify this accordingly</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">infile</span> <span class="o">==</span> <span class="bp">None</span> <span class="ow">or</span> <span class="n">outfile</span> <span class="o">==</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>        <span class="n">usage</span><span class="p">()</span>
</span><span class='line'>        <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#real work flow goes here</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;input file is &#39;</span><span class="si">%s</span><span class="s">&#39; and output file is &#39;</span><span class="si">%s</span><span class="s">&#39;&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">infile</span><span class="p">,</span> <span class="n">outfile</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">main</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Works?</h2>

<p>Enough. It works?</p>
]]></content>
  </entry>
  
</feed>
